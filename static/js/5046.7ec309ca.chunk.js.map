{"version":3,"file":"static/js/5046.7ec309ca.chunk.js","mappings":"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","sources":["components/Antd/Upload/index.ant.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { PlusOutlined, LoadingOutlined } from \"@ant-design/icons\";\r\nimport { Upload, Form } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useField } from \"formik\";\r\n// import ImgCrop from \"antd-img-crop\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  getLocalStorageToken,\r\n  removeSessionStorageToken,\r\n} from \"../../../utils\";\r\nimport modalNotification from \"../../../utils/notification\";\r\nimport configs from \"../../../config\";\r\nimport {\r\n  selectUserData,\r\n  updateUserDataAction,\r\n} from \"../../../redux/AuthSlice/index.slice\";\r\n\r\nfunction UploadInput({\r\n  applyImageCropper = true,\r\n  label = \"\",\r\n  apiEndPoints,\r\n  name,\r\n  defaultImageUrl,\r\n  profilePicture = false,\r\n  aspect,\r\n  children,\r\n  ...rest\r\n}) {\r\n  const { t } = useTranslation();\r\n  const userData = useSelector(selectUserData);\r\n  const dispatch = useDispatch();\r\n  const [loading, setLoading] = useState(false);\r\n  const [imageUrl, setImageUrl] = useState();\r\n\r\n  const [field, meta, helpers] = useField(name);\r\n  const config = { ...field, ...rest };\r\n  const apiToken = getLocalStorageToken();\r\n\r\n  if (meta && meta.touched && meta.error) {\r\n    config.error = true;\r\n    config.helperText = meta.error;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (defaultImageUrl) {\r\n      setImageUrl(defaultImageUrl);\r\n    } else {\r\n      setImageUrl(`${configs.ADMIN_IMAGE_URL}/logo-default.jpg`);\r\n    }\r\n  }, [defaultImageUrl]);\r\n\r\n  const getBase64 = (img, callback) => {\r\n    const reader = new FileReader();\r\n    reader.addEventListener(\"load\", () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n  };\r\n\r\n  const beforeUpload = (file) => {\r\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\r\n    if (!isJpgOrPng) {\r\n      modalNotification({\r\n        type: \"error\",\r\n        message: t(\"text.common.imageOnlyMessgae\"),\r\n      });\r\n    }\r\n\r\n    const isLt2M = file.size / 1024 / 1024 < 5;\r\n\r\n    if (!isLt2M) {\r\n      modalNotification({\r\n        type: \"error\",\r\n        message: t(\"text.common.imageSizeExceedingMessage\"),\r\n      });\r\n    }\r\n\r\n    return isJpgOrPng && isLt2M;\r\n  };\r\n\r\n  const handleChange = (info) => {\r\n    if (info.file.status === \"uploading\") {\r\n      setLoading(true);\r\n    } else {\r\n      const { status, response } = info.file;\r\n      if (status === \"done\") {\r\n        getBase64(info.file.originFileObj, (url) => {\r\n          setLoading(false);\r\n          setImageUrl(url);\r\n        });\r\n        modalNotification({\r\n          type: \"success\",\r\n          message: \"Image uploaded successfully\",\r\n          // description: `${info.file.name} file uploaded successfully.`,\r\n        });\r\n        // onFileUploaded(response.data.basePath)\r\n        if (profilePicture) {\r\n          let obj = {\r\n            ...userData,\r\n          };\r\n          obj.profilePicture = response?.data?.url;\r\n          dispatch(updateUserDataAction(obj));\r\n        }\r\n        helpers.setValue(\r\n          response.data.basePath ||\r\n            response.data.basePathUrl ||\r\n            response?.data?.url\r\n        );\r\n      } else if (status === \"error\") {\r\n        setLoading(false);\r\n        modalNotification({\r\n          type: \"error\",\r\n          message: info?.fileList[0]?.response?.message,\r\n          description: `${info.file.name} file upload failed. ${info.file.response.detail}`,\r\n        });\r\n        if (response?.detail?.search(\"authenticated\") !== -1) {\r\n          removeSessionStorageToken();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div\r\n        style={{\r\n          marginTop: 8,\r\n        }}\r\n      >\r\n        <div className=\"my-auto text-center\">\r\n          <span className=\"icon-camera\" />\r\n          <div className=\"font-sm txt\">+ Upload Image</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  return applyImageCropper ? (\r\n    <Form.Item\r\n      label={label}\r\n      className=\"flex-col\"\r\n      name={name}\r\n      help={meta.error && meta?.error && meta?.touched ? meta.error : \"\"}\r\n      validateStatus={config.error ? \"error\" : \"success\"}\r\n    >\r\n      {/* <ImgCrop quality={1} aspect={aspect}> */}\r\n      <Upload\r\n        name=\"file\"\r\n        type=\"file\"\r\n        listType=\"picture-card\"\r\n        className=\"avatar-uploader\"\r\n        showUploadList={false}\r\n        action={apiEndPoints}\r\n        beforeUpload={beforeUpload}\r\n        onChange={handleChange}\r\n        disabled={loading}\r\n        {...rest}\r\n        headers={{\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          Authorization: `Bearer ${apiToken}`,\r\n        }}\r\n      >\r\n        {imageUrl ? (\r\n          loading ? (\r\n            userData.userRole === \"admin\" ? (\r\n              <LoadingOutlined />\r\n            ) : (\r\n              <LoadingOutlined />\r\n            )\r\n          ) : (\r\n            <img\r\n              src={imageUrl}\r\n              alt=\"avatar\"\r\n              style={{\r\n                // width: '100%',\r\n                height: \"100%\",\r\n              }}\r\n            />\r\n          )\r\n        ) : (\r\n          uploadButton\r\n        )}\r\n        {children}\r\n      </Upload>\r\n      {/* </ImgCrop> */}\r\n    </Form.Item>\r\n  ) : (\r\n    <Form.Item\r\n      label={label}\r\n      className=\"flex-col\"\r\n      name={name}\r\n      help={meta.error && meta?.error && meta?.touched ? meta.error : \"\"}\r\n      validateStatus={config.error ? \"error\" : \"success\"}\r\n    >\r\n      <Upload\r\n        name=\"file\"\r\n        type=\"file\"\r\n        listType=\"picture-card\"\r\n        className=\"avatar-uploader\"\r\n        showUploadList={false}\r\n        action={apiEndPoints}\r\n        beforeUpload={beforeUpload}\r\n        onChange={handleChange}\r\n        {...rest}\r\n        headers={{\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          Authorization: `Bearer ${apiToken}`,\r\n        }}\r\n      >\r\n        {imageUrl ? (\r\n          loading ? (\r\n            userData.userRole === \"admin\" ? (\r\n              <LoadingOutlined />\r\n            ) : (\r\n              <LoadingOutlined className=\"text-white\" />\r\n            )\r\n          ) : (\r\n            <img\r\n              src={imageUrl}\r\n              alt=\"avatar\"\r\n              style={{\r\n                // width: '100%',\r\n                height: \"100%\",\r\n              }}\r\n            />\r\n          )\r\n        ) : (\r\n          uploadButton\r\n        )}\r\n        {children}\r\n      </Upload>\r\n    </Form.Item>\r\n  );\r\n}\r\n\r\nexport default UploadInput;\r\n"],"names":["_ref","_ref$applyImageCroppe","applyImageCropper","_ref$label","label","apiEndPoints","name","defaultImageUrl","_ref$profilePicture","profilePicture","children","aspect","rest","_objectWithoutProperties","_excluded","t","useTranslation","userData","useSelector","selectUserData","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","imageUrl","setImageUrl","_useField","useField","_useField2","field","meta","helpers","config","_objectSpread","apiToken","getLocalStorageToken","touched","error","helperText","useEffect","concat","configs","beforeUpload","file","isJpgOrPng","type","modalNotification","message","isLt2M","size","handleChange","info","status","_info$file","response","_response$data2","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","originFileObj","url","_response$data","obj","data","updateUserDataAction","setValue","basePath","basePathUrl","_info$fileList$","_info$fileList$$respo","_response$detail","fileList","description","detail","search","removeSessionStorageToken","uploadButton","_jsxs","_jsx","LoadingOutlined","PlusOutlined","style","marginTop","className","Form","help","validateStatus","Upload","listType","showUploadList","action","onChange","disabled","headers","Authorization","userRole","src","alt","height"],"sourceRoot":""}