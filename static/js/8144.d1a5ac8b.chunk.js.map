{"version":3,"file":"static/js/8144.d1a5ac8b.chunk.js","mappings":"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","sources":["pages/SubAdmin/SubAdminAccount/AdminChangePassword/index.page.js","pages/SubAdmin/SubAdminAccount/AdminChangePassword/validation.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Formik } from \"formik\";\r\nimport {\r\n  Password as TextPassword,\r\n  CommonButton,\r\n  PageHeader,\r\n  AcountSidebar,\r\n} from \"../../../../components/index\";\r\nimport { subAdminAuthServices } from \"../../../../services\";\r\nimport { logger, modalNotification } from \"../../../../utils\";\r\nimport validation from \"./validation\";\r\n\r\nfunction AdminChangePassword() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [asideView, setAsideView] = useState(false);\r\n  const [currentPassword, setCurrentPassword] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n  const [checkRegex, setCheckRegex] = useState({\r\n    capital: false,\r\n    number: false,\r\n    length: false,\r\n  });\r\n\r\n  const initialValues = {\r\n    currentPassword: \"\",\r\n    newPassword: \"\",\r\n    confirmPassword: \"\",\r\n  };\r\n  const onPasswordChange = (e) => {\r\n    let data = e;\r\n    // setNewPassword(e.target.value);\r\n    let stateData = { ...checkRegex };\r\n    let upperCasePattern = /[A-Z]/g;\r\n    let specialCharacterPattern =\r\n      /^(?=.*[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{1,}$/;\r\n    let lengthPattern = /^.{6,15}$/g;\r\n    stateData.capital = upperCasePattern.test(data);\r\n    stateData.number = specialCharacterPattern.test(data);\r\n    stateData.length = lengthPattern.test(data);\r\n    setCheckRegex(stateData);\r\n  };\r\n  const asideToggle = () => {\r\n    setAsideView(!asideView);\r\n  };\r\n  if (asideView) {\r\n    document.querySelector(\"body\").classList.add(\"toggle-shown\");\r\n  } else {\r\n    document.querySelector(\"body\").classList.remove(\"toggle-shown\");\r\n  }\r\n\r\n  const onSubmit = async (value, resetForm) => {\r\n    setLoading(true);\r\n    try {\r\n      let payload = {\r\n        currentPassword: value?.currentPassword,\r\n        password: value?.newPassword,\r\n        confirmPassword: value?.confirmPassword,\r\n      };\r\n      const response = await subAdminAuthServices.changePasswordService(\r\n        payload\r\n      );\r\n      const { success, message } = response;\r\n      if (success) {\r\n        modalNotification({\r\n          type: \"success\",\r\n          message,\r\n        });\r\n        setLoading(false);\r\n        resetForm();\r\n        setCheckRegex({\r\n          capital: false,\r\n          number: false,\r\n          length: false,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      logger(error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"nk-block\">\r\n        <div className=\"card\">\r\n          <div className=\"card-aside-wrap\">\r\n            <div className=\"card-inner card-inner-lg\">\r\n              <div className=\"nk-block-head nk-block-head-lg\">\r\n                <div className=\"nk-block-between\">\r\n                  <PageHeader heading=\"Change Password\">\r\n                    <p>Set a unique password to protect your account.</p>\r\n                  </PageHeader>\r\n                  <div className=\"nk-block-head-content align-self-start d-lg-none\">\r\n                    <Link\r\n                      to=\"#\"\r\n                      onClick={() => asideToggle()}\r\n                      className={`toggle btn btn-icon btn-trigger mt-n1 ${\r\n                        asideView ? \"active\" : \"\"\r\n                      }`}\r\n                    >\r\n                      <em className=\"icon ni ni-menu-alt-r\" />\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"nk-block wide-xs\">\r\n                <Formik\r\n                  initialValues={{ ...initialValues }}\r\n                  validationSchema={validation()}\r\n                  onSubmit={(e, { resetForm }) => {\r\n                    onSubmit(e, resetForm);\r\n                  }}\r\n                  validate={(e) => {\r\n                    onPasswordChange(e.newPassword);\r\n                  }}\r\n                  enableReinitialize\r\n                >\r\n                  {(props) => {\r\n                    return (\r\n                      <Form onSubmit={props.handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                          <div className=\"form-label-group\">\r\n                            <label className=\"form-label\">\r\n                              Current Password\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"form-control-wrap\">\r\n                            <TextPassword\r\n                              className=\"form-control shadow-none\"\r\n                              name=\"currentPassword\"\r\n                              disabled={false}\r\n                              variant=\"standard\"\r\n                              placeholder=\"Enter Current Password\"\r\n                              setFieldValue={props.handleChange}\r\n                              type={currentPassword ? \"text\" : \"password\"}\r\n                              toggleIcon={\r\n                                <Link\r\n                                  to=\"#\"\r\n                                  onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    setCurrentPassword(!currentPassword);\r\n                                  }}\r\n                                  className=\"form-icon form-icon-right passcode-switch\"\r\n                                  data-target=\"password\"\r\n                                >\r\n                                  <em\r\n                                    className={`passcode-icon icon-show icon ni  ni-eye${\r\n                                      currentPassword ? \"\" : \"-off\"\r\n                                    } `}\r\n                                  />\r\n                                </Link>\r\n                              }\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <div className=\"form-label-group\">\r\n                            <label className=\"form-label\" htmlFor=\"default-01\">\r\n                              New Password\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"form-control-wrap\">\r\n                            <TextPassword\r\n                              className=\"form-control form-control-lg\"\r\n                              name=\"newPassword\"\r\n                              placeholder=\"Enter New Password\"\r\n                              setFieldValue={props.handleChange}\r\n                              type={showPassword ? \"text\" : \"password\"}\r\n                              toggleIcon={\r\n                                <Link\r\n                                  to=\"#\"\r\n                                  onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    setShowPassword(!showPassword);\r\n                                  }}\r\n                                  className=\"form-icon form-icon-right passcode-switch\"\r\n                                  data-target=\"password\"\r\n                                >\r\n                                  <em\r\n                                    className={`passcode-icon icon-show icon ni ni-eye${\r\n                                      showPassword ? \"\" : \"-off\"\r\n                                    } `}\r\n                                  />\r\n                                </Link>\r\n                              }\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"form-group passwordInfo\">\r\n                          <h6>Password contains:</h6>\r\n                          <p\r\n                            className={`text-${\r\n                              checkRegex.capital ? \"success\" : \"danger\"\r\n                            }`}\r\n                          >\r\n                            <em className=\"icon ni ni-check\" /> &nbsp; At least\r\n                            1 Capital Letter & 1 Small Letter.\r\n                          </p>\r\n                          <p\r\n                            className={`text-${\r\n                              checkRegex.number ? \"success\" : \"danger\"\r\n                            }`}\r\n                          >\r\n                            <em className=\"icon ni ni-check\" /> &nbsp; At least\r\n                            1 Special Character & 1 Number.\r\n                          </p>\r\n                          <p\r\n                            className={`text-${\r\n                              checkRegex.length ? \"success\" : \"danger\"\r\n                            }`}\r\n                          >\r\n                            <em className=\"icon ni ni-check\" /> &nbsp; 6-15\r\n                            Character long.\r\n                          </p>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <div className=\"form-label-group\">\r\n                            <label\r\n                              className=\"form-label\"\r\n                              htmlFor=\"confirmPassword\"\r\n                            >\r\n                              Confirm Password\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"form-control-wrap\">\r\n                            <TextPassword\r\n                              className=\"form-control form-control-lg\"\r\n                              name=\"confirmPassword\"\r\n                              placeholder=\"Confirm New Password\"\r\n                              setFieldValue={props.handleChange}\r\n                              type={showConfirmPassword ? \"text\" : \"password\"}\r\n                              toggleIcon={\r\n                                <Link\r\n                                  to=\"#\"\r\n                                  onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    setShowConfirmPassword(\r\n                                      !showConfirmPassword\r\n                                    );\r\n                                  }}\r\n                                  className=\"form-icon form-icon-right passcode-switch\"\r\n                                  data-target=\"password\"\r\n                                >\r\n                                  <em\r\n                                    className={`passcode-icon icon-show icon ni ni-eye${\r\n                                      showConfirmPassword ? \"\" : \"-off\"\r\n                                    } `}\r\n                                  />\r\n                                </Link>\r\n                              }\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <CommonButton\r\n                            type=\"submit\"\r\n                            htmlType=\"submit\"\r\n                            loading={loading}\r\n                            className=\"btn btn-lg btn-primary btn-block\"\r\n                          >\r\n                            Update\r\n                          </CommonButton>\r\n                        </div>\r\n                      </Form>\r\n                    );\r\n                  }}\r\n                </Formik>\r\n              </div>\r\n            </div>\r\n            <AcountSidebar asideView={asideView} asideToggle={asideToggle} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default AdminChangePassword;\r\n","import * as yup from \"yup\";\r\n\r\nexport default function validation() {\r\n  return yup.object().shape({\r\n    currentPassword: yup\r\n      .string()\r\n      .required(\"Please Enter Your Current Password\")\r\n      .matches(\r\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{6,15}$/,\r\n        \"Must Contain 8 Characters,\\nOne Uppercase, One Lowercase,\\nOne Number & special Character\"\r\n      ),\r\n    newPassword: yup.string().required(\"Please Enter Your New Password\"),\r\n    // .matches(\r\n    //   /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{6,15}$/,\r\n    //   i18next.t(\"validation.changePassword.passwordField\")\r\n    // ),\r\n    confirmPassword: yup\r\n      .string()\r\n      .required(\"Please Enter Your Confirm Password\")\r\n      .oneOf(\r\n        [yup.ref(\"newPassword\"), null],\r\n        \"Password and Confirm Password must be the same\"\r\n      ),\r\n  });\r\n}\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","asideView","setAsideView","_useState5","_useState6","currentPassword","setCurrentPassword","_useState7","_useState8","showPassword","setShowPassword","_useState9","_useState10","showConfirmPassword","setShowConfirmPassword","_useState11","capital","number","length","_useState12","checkRegex","setCheckRegex","asideToggle","document","querySelector","classList","add","remove","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","value","resetForm","payload","response","success","message","wrap","_context","prev","next","password","newPassword","confirmPassword","subAdminAuthServices","sent","modalNotification","type","t0","logger","stop","_x","_x2","apply","arguments","_jsx","_Fragment","children","className","_jsxs","PageHeader","heading","Link","to","onClick","concat","Formik","initialValues","_objectSpread","validationSchema","yup","shape","required","matches","oneOf","e","_ref2","validate","data","stateData","test","onPasswordChange","enableReinitialize","props","Form","handleSubmit","TextPassword","name","disabled","variant","placeholder","setFieldValue","handleChange","toggleIcon","preventDefault","htmlFor","CommonButton","htmlType","AcountSidebar"],"sourceRoot":""}