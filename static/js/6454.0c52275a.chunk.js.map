{"version":3,"file":"static/js/6454.0c52275a.chunk.js","mappings":"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","sources":["pages/SubAdmin/Banner/addBanner.js","pages/SubAdmin/Banner/validation.js","pages/SubAdmin/Banner/index.pages.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["import { Formik, Form } from \"formik\";\r\nimport React from \"react\";\r\nimport {\r\n  Input as TextInput,\r\n  CommonButton,\r\n  UploadInput,\r\n} from \"../../../components\";\r\nimport { Media } from \"../../../apiEndPoints\";\r\nimport validation from \"./validation\";\r\n\r\nfunction AddBannerForm(mainProps) {\r\n  const { onSubmit, loading, formData } = mainProps;\r\n\r\n  const initialValues = {\r\n    image: formData?.image || \"\",\r\n    name: formData?.name || \"\",\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{ ...initialValues }}\r\n      validationSchema={validation()}\r\n      onSubmit={onSubmit}\r\n      enableReinitialize\r\n    >\r\n      {(props) => {\r\n        return (\r\n          <Form>\r\n            <div className=\"form-group\">\r\n              <label className=\"form-label\">Banner Title</label>\r\n              <div className=\"form-control-wrap\">\r\n                <TextInput\r\n                  id=\"name\"\r\n                  className=\"form-control\"\r\n                  name=\"name\"\r\n                  disabled={false}\r\n                  variant=\"standard\"\r\n                  type=\"text\"\r\n                  placeholder=\"Enter title\"\r\n                  setFieldValue={props.handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"form-label\">Banner Image</label>\r\n              <div className=\"form-group\">\r\n                <div className=\"upload_photo mb-2 mb-md-3 mx-auto text-center\">\r\n                  <div className=\"img-box\">\r\n                    <UploadInput\r\n                      name=\"image\"\r\n                      apiEndPoints={Media.profileImage}\r\n                      type=\"file\"\r\n                      // disabled={!isEdit}\r\n                      defaultImageUrl={formData?.image}\r\n                      setFieldValue={props.handleChange}\r\n                    >\r\n                      {/* <Tooltip\r\n                        overlayInnerStyle={{ width: \"80%\" }}\r\n                        placement=\"right\"\r\n                        color=\"#b9923b\"\r\n                        promptText={t(\"text.common.imageTooltip\")}\r\n                      >\r\n                        <label className=\"mb-0 ripple-effect\">\r\n                          <em className=\"icon ni ni-pen2\" />\r\n                        </label>\r\n                      </Tooltip> */}\r\n                    </UploadInput>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group text-center\">\r\n              <CommonButton\r\n                htmlType=\"submit\"\r\n                type=\"submit\"\r\n                loading={loading}\r\n                extraClassName=\"btn btn-primary ripple-effect\"\r\n              >\r\n                {formData?.id ? \"Update Banner\" : \"Add Banner\"}\r\n              </CommonButton>\r\n            </div>\r\n          </Form>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default AddBannerForm;\r\n","import * as yup from \"yup\";\r\n\r\nexport default function validation() {\r\n  return yup.object().shape({\r\n    name: yup.string().required(\"Brand name is required\"),\r\n    image: yup.string().required(\"Brand image is required\"),\r\n    // phoneNumber: yup.string().required(\"Phone number is required\"),\r\n  });\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport {\r\n  DataTable,\r\n  ListingHeader,\r\n  ModalComponent,\r\n  PageHeader,\r\n  SweetAlert,\r\n  actionFormatter,\r\n  logoFormatter,\r\n} from \"../../../components\";\r\nimport {\r\n  checkValidData,\r\n  decodeQueryData,\r\n  getSortType,\r\n  logger,\r\n  modalNotification,\r\n} from \"../../../utils\";\r\nimport { bannerServices } from \"../../../services\";\r\nimport AddBannerForm from \"./addBanner\";\r\n\r\nfunction Brands() {\r\n  const location = useLocation();\r\n  const { search } = location;\r\n  const [bannerData, setBannerData] = useState([]);\r\n  const [param, setParam] = useState({});\r\n  const [page, setPage] = useState(1);\r\n  const [sizePerPage, setSizePerView] = useState(10);\r\n  const [searchName, setSearchName] = useState(\"\");\r\n  const [defaultSort, setDefaultSort] = useState([\r\n    {\r\n      dataField: \"\",\r\n      order: \"\",\r\n    },\r\n  ]);\r\n  const [tableLoader, setTableLoader] = useState(false);\r\n  const [noOfPage, setNoOfPage] = useState();\r\n  const [totalCount, setTotalCount] = useState(0);\r\n  const [show, setShow] = useState(false);\r\n  const [rowData, setRowData] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [isAlertVisibleDelete, setIsAlertVisibleDelete] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (search) {\r\n      const data = decodeQueryData(search);\r\n      setParam(data);\r\n      setPage(data?.page ?? 1);\r\n      if (data?.sortType) {\r\n        const sortData = [\r\n          {\r\n            order: getSortType(data?.sortType),\r\n            dataField: data?.sortBy,\r\n          },\r\n        ];\r\n        setDefaultSort(sortData);\r\n      } else {\r\n        setDefaultSort({\r\n          dataField: \"\",\r\n          order: \"\",\r\n        });\r\n      }\r\n    }\r\n  }, [location]);\r\n\r\n  const onHandleShow = (row) => {\r\n    setShow(true);\r\n    setRowData(row);\r\n  };\r\n\r\n  const getBannerData = async () => {\r\n    setTableLoader(true);\r\n    try {\r\n      let queryParams = {\r\n        offset: (page - 1) * sizePerPage,\r\n        limit: sizePerPage,\r\n        sortBy: param?.sortBy,\r\n        sortType: param?.sortType,\r\n        name: searchName,\r\n      };\r\n      const res = await bannerServices.getBannerList(queryParams);\r\n      const { success, data } = res;\r\n      if (success) {\r\n        setBannerData(data.rows);\r\n        setNoOfPage(data.count > 0 ? Math.ceil(data.count / sizePerPage) : 1);\r\n        setTotalCount(data.count);\r\n      }\r\n    } catch (error) {\r\n      logger(error);\r\n    }\r\n    setTableLoader(false);\r\n  };\r\n\r\n  async function deleteBrand() {\r\n    try {\r\n      const res = await bannerServices?.deleteBanner(rowData?.id);\r\n      if (res?.success) {\r\n        modalNotification({\r\n          type: \"success\",\r\n          message: res?.message,\r\n        });\r\n        getBannerData();\r\n      }\r\n    } catch (error) {\r\n      logger(error);\r\n    }\r\n  }\r\n  const onTypeDeleteConfirmAlert = () => {\r\n    deleteBrand(rowData);\r\n    setTableLoader(true);\r\n    setIsAlertVisibleDelete(false);\r\n    return false;\r\n  };\r\n\r\n  //   const headerSortingClasses = (column, sortOrder) => {\r\n  //     return sortOrder === \"asc\" ? \"sorting_asc\" : \"sorting_desc\";\r\n  //   };\r\n\r\n  //   const onSortColumn = (field, order) => {\r\n  //     const data = { ...param };\r\n  //     data.sortBy = field;\r\n  //     data.sortType = order === \"asc\" ? \"ASC\" : \"DESC\";\r\n  //     navigateWithParam(data, navigate, pathname);\r\n  //     tableReset();\r\n  //   };\r\n\r\n  const options = (row) => {\r\n    const optionsArr = [\r\n      {\r\n        name: \"Edit\",\r\n        icon: \"icon ni ni-pen\",\r\n        path: \"#addForm\",\r\n        action: \"confirm\",\r\n        onClickHandle: () => {\r\n          onHandleShow(row);\r\n        },\r\n      },\r\n      {\r\n        name: \"Delete\",\r\n        icon: \"icon ni ni-trash\",\r\n        action: \"confirm\",\r\n        onClickHandle: () => {\r\n          setRowData(row);\r\n          setIsAlertVisibleDelete(true);\r\n          document.body.click();\r\n        },\r\n      },\r\n    ];\r\n\r\n    return optionsArr;\r\n  };\r\n  const columns = [\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Title\",\r\n      //   headerClasses: \"sorting\",\r\n      //   sort: true,\r\n      //   headerSortingClasses,\r\n      //   onSort: (field, order) => {\r\n      //     onSortColumn(field, order);\r\n      //   },\r\n      formatter: (cell) => checkValidData(cell),\r\n    },\r\n    {\r\n      dataField: \"image\",\r\n      text: \"Banner Image\",\r\n      //   headerClasses: \"sorting\",\r\n      //   sort: true,\r\n      //   headerSortingClasses,\r\n      //   onSort: (field, order) => {\r\n      //     onSortColumn(field, order);\r\n      //   },\r\n      formatter: (cell, row) => (row?.image ? logoFormatter(cell) : \"-\"),\r\n    },\r\n    {\r\n      dataField: \"BrandBanner\",\r\n      text: \"Brand Banner\",\r\n      //   headerClasses: \"sorting\",\r\n      //   sort: true,\r\n      //   headerSortingClasses,\r\n      //   onSort: (field, order) => {\r\n      //     onSortColumn(field, order);\r\n      //   },\r\n      formatter: (cell) => checkValidData(cell),\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Action\",\r\n      headerClasses: \"d-flex justify-content-end\",\r\n      //   sort: true,\r\n      //   headerSortingClasses,\r\n      //   onSort: (field, order) => {\r\n      //     onSortColumn(field, order);\r\n      //   },\r\n\r\n      formatter: (cell, row) => actionFormatter(options(row)),\r\n    },\r\n  ];\r\n\r\n  const tableReset = () => {\r\n    setTableLoader(true);\r\n    setBannerData([]);\r\n    setNoOfPage(0);\r\n    setTotalCount(0);\r\n  };\r\n\r\n  const getSearchValue = (val) => {\r\n    setSearchName(val);\r\n    if (val) {\r\n      tableReset();\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (value) => {\r\n    setLoading(true);\r\n    try {\r\n      let bodydata = {\r\n        ...value,\r\n      };\r\n      const res = rowData\r\n        ? await bannerServices?.updateBanner(rowData?.id, bodydata)\r\n        : await bannerServices?.addBanner(bodydata);\r\n      if (res?.success) {\r\n        modalNotification({\r\n          type: \"success\",\r\n          message: res?.message,\r\n        });\r\n        setShow(false);\r\n        setRowData(\"\");\r\n        tableReset();\r\n        getBannerData();\r\n      }\r\n    } catch (error) {\r\n      logger(error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBannerData();\r\n  }, [param]);\r\n  return (\r\n    <div className=\"nk-block-head nk-block-head-sm\">\r\n      <div className=\"nk-block-between\">\r\n        <Card className=\"w-100 rounded-2 mb-4\">\r\n          <Card.Body>\r\n            <div className=\"d-flex justify-content-between\">\r\n              <PageHeader heading=\"Banners\" />\r\n              <ListingHeader\r\n                btnText=\"Add Banner\"\r\n                onHandleShow={(e) => {\r\n                  e.preventDefault();\r\n                  onHandleShow();\r\n                }}\r\n                btnArray={[\"create\"]}\r\n              />\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n        <ModalComponent\r\n          onHandleCancel={() => {\r\n            setShow(false);\r\n            setRowData(\"\");\r\n          }}\r\n          show={show}\r\n          title={rowData?.id ? \"Edit Banner\" : \"Add Banner\"}\r\n        >\r\n          <AddBannerForm\r\n            formData={rowData}\r\n            onSubmit={onSubmit}\r\n            loading={loading}\r\n          />\r\n        </ModalComponent>\r\n      </div>\r\n\r\n      <DataTable\r\n        sizePerPagination={false}\r\n        hasLimit\r\n        noOfPage={noOfPage}\r\n        sizePerPage={sizePerPage}\r\n        page={page}\r\n        count={totalCount}\r\n        tableData={bannerData}\r\n        tableColumns={columns}\r\n        // param={param}\r\n        defaultSort={defaultSort}\r\n        tableLoader={tableLoader}\r\n        setSizePerPage={setSizePerView}\r\n        tableReset={tableReset}\r\n        getSearchValue={getSearchValue}\r\n        searchPlaceholder=\"Brand Name\"\r\n      />\r\n\r\n      <SweetAlert\r\n        title=\"Are you sure\"\r\n        text=\"you want to delete this brand?\"\r\n        show={isAlertVisibleDelete}\r\n        icon=\"warning\"\r\n        showCancelButton\r\n        confirmButtonText=\"Yes\"\r\n        cancelButtonText=\"No\"\r\n        setIsAlertVisible={setIsAlertVisibleDelete}\r\n        // showLoaderOnConfirm\r\n        // loading={loading}\r\n        onConfirmAlert={onTypeDeleteConfirmAlert}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Brands;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["mainProps","onSubmit","loading","formData","initialValues","image","name","_jsx","Formik","_objectSpread","validationSchema","yup","shape","required","enableReinitialize","children","props","_jsxs","Form","className","TextInput","id","disabled","variant","type","placeholder","setFieldValue","handleChange","UploadInput","apiEndPoints","Media","defaultImageUrl","CommonButton","htmlType","extraClassName","location","useLocation","search","_useState","useState","_useState2","_slicedToArray","bannerData","setBannerData","_useState3","_useState4","param","setParam","_useState5","_useState6","page","setPage","_useState7","_useState8","sizePerPage","setSizePerView","_useState9","_useState10","searchName","setSearchName","_useState11","dataField","order","_useState12","defaultSort","setDefaultSort","_useState13","_useState14","tableLoader","setTableLoader","_useState15","_useState16","noOfPage","setNoOfPage","_useState17","_useState18","totalCount","setTotalCount","_useState19","_useState20","show","setShow","_useState21","_useState22","rowData","setRowData","_useState23","_useState24","setLoading","_useState25","_useState26","isAlertVisibleDelete","setIsAlertVisibleDelete","useEffect","_data$page","data","decodeQueryData","sortType","sortData","getSortType","sortBy","onHandleShow","row","getBannerData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","queryParams","res","success","wrap","_context","prev","next","offset","limit","bannerServices","sent","rows","count","Math","ceil","t0","logger","stop","apply","arguments","_deleteBrand","_callee3","_context3","modalNotification","message","columns","text","formatter","cell","checkValidData","logoFormatter","headerClasses","actionFormatter","icon","path","action","onClickHandle","document","body","click","options","tableReset","_ref2","_callee2","value","bodydata","_context2","t1","_x","Card","PageHeader","heading","ListingHeader","btnText","e","preventDefault","btnArray","ModalComponent","onHandleCancel","title","AddBannerForm","DataTable","sizePerPagination","hasLimit","tableData","tableColumns","setSizePerPage","getSearchValue","val","searchPlaceholder","SweetAlert","showCancelButton","confirmButtonText","cancelButtonText","setIsAlertVisible","onConfirmAlert","deleteBrand","CardImg","React","ref","bsPrefix","_ref$as","as","Component","_objectWithoutProperties","_excluded","prefix","useBootstrapPrefix","classNames","concat","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","border","defaultProps","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","context","p"],"sourceRoot":""}