{"version":3,"file":"static/js/5552.6e834445.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/ProgressBar.js","components/UiElement/Progressbar/index.js"],"sourcesContent":["import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","import classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n\n/**\n * Validate that children, if any, are instances of `<ProgressBar>`.\n */\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n  if (!children) {\n    return null;\n  }\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\n  });\n  return error;\n}\nconst defaultProps = {\n  min: 0,\n  max: 100,\n  animated: false,\n  isChild: false,\n  visuallyHidden: false,\n  striped: false\n};\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\nfunction renderProgressBar({\n  min,\n  now,\n  max,\n  label,\n  visuallyHidden,\n  striped,\n  animated,\n  className,\n  style,\n  variant,\n  bsPrefix,\n  ...props\n}, ref) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, `${bsPrefix}-bar`, {\n      [`bg-${variant}`]: variant,\n      [`${bsPrefix}-bar-animated`]: animated,\n      [`${bsPrefix}-bar-striped`]: animated || striped\n    }),\n    style: {\n      width: `${getPercentage(now, min, max)}%`,\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\n  isChild,\n  ...props\n}, ref) => {\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nProgressBar.defaultProps = defaultProps;\nexport default ProgressBar;","import React from \"react\";\r\nimport { ProgressBar } from \"react-bootstrap\";\r\n\r\nfunction ProgressBarComponent({ children, now = 0 }) {\r\n  return (\r\n    <ProgressBar now={now} striped variant=\"success\">\r\n      {children}{\" \"}\r\n    </ProgressBar>\r\n  );\r\n}\r\n\r\nexport default ProgressBarComponent;\r\n"],"names":["map","children","func","index","React","child","ROUND_PRECISION","getPercentage","now","min","max","percentage","Math","round","renderProgressBar","_ref","ref","_classNames","label","visuallyHidden","striped","animated","className","style","variant","bsPrefix","props","_objectWithoutProperties","_excluded","_jsx","_objectSpread","role","classNames","concat","_defineProperty","width","ProgressBar","_ref2","isChild","_excluded2","useBootstrapPrefix","wrapperProps","_excluded3","cloneElement","displayName","defaultProps","_ref$now","_jsxs"],"sourceRoot":""}