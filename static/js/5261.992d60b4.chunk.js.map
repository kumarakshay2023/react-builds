{"version":3,"file":"static/js/5261.992d60b4.chunk.js","mappings":"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","sources":["components/Form/User/Auth/SignUp/index.form.js"],"sourcesContent":["import { Form, Formik } from \"formik\";\r\nimport React, { useMemo, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// import dayjs from \"dayjs\";\r\nimport {\r\n  Select,\r\n  Input as TextInput,\r\n  Password as TextPassword,\r\n} from \"../../../../Antd\";\r\nimport { CommonButton, CustomCheck } from \"../../../../UiElement\";\r\nimport {\r\n  dayJsDateFormatter,\r\n  getDateOfMonth,\r\n  getMonths,\r\n} from \"../../../../../utils\";\r\n// import validation from \"./validation\";\r\nfunction SignUpForm({ onSubmit, t }) {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [monthValue, setMonthValue] = useState(\r\n    dayJsDateFormatter(new Date(), \"MMMM\")\r\n  );\r\n  const [yearValue, setYearValue] = useState(\r\n    dayJsDateFormatter(new Date(), \"YYYY\")\r\n  );\r\n\r\n  const initialValues = {\r\n    fullName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    month: undefined,\r\n    day: undefined,\r\n    year: undefined,\r\n    check: undefined,\r\n  };\r\n\r\n  const monthOptions = useMemo(() => {\r\n    let arr = [];\r\n    let monthsData = [...getMonths()];\r\n    monthsData.forEach((item) => {\r\n      let obj = {};\r\n      obj.id = item?.toLowerCase();\r\n      obj.name = item;\r\n      arr.push(obj);\r\n    });\r\n    return arr;\r\n  }, []);\r\n\r\n  const yearOptions = useMemo(() => {\r\n    let date = new Date();\r\n    let year = date.getFullYear();\r\n    let arr = [];\r\n    for (let i = year; i >= year - 100; i -= 1) {\r\n      let obj = {};\r\n      obj.id = i;\r\n      obj.name = i;\r\n      arr.push(obj);\r\n    }\r\n    return arr;\r\n  }, []);\r\n\r\n  const getDate = useMemo(() => {\r\n    let dateData = getDateOfMonth(monthValue, yearValue);\r\n    let arr = [];\r\n    dateData.forEach((item) => {\r\n      let obj = {};\r\n      obj.id = item;\r\n      obj.name = item;\r\n      arr.push(obj);\r\n    });\r\n    return arr;\r\n  }, [monthValue, yearValue]);\r\n\r\n  const getMonthValue = (value) => {\r\n    setMonthValue(value);\r\n  };\r\n\r\n  const getYearValue = (value) => {\r\n    setYearValue(value);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{ ...initialValues }}\r\n      // validationSchema={validation()}\r\n      onSubmit={onSubmit}\r\n      enableReinitialize\r\n    >\r\n      {(props) => {\r\n        return (\r\n          <Form>\r\n            <div className=\"form-group\">\r\n              <div className=\"position-relative fieldicon\">\r\n                <TextInput\r\n                  className=\"form-control fieldicon-input-right\"\r\n                  name=\"fullName\"\r\n                  disabled={false}\r\n                  variant=\"standard\"\r\n                  type=\"text\"\r\n                  placeholder={t(\"text.userAuth.fullNamePlaceHolder\")}\r\n                  setFieldValue={props.handleChange}\r\n                  icon={<em className=\"fieldicon-right splash-user\" />}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <div className=\"position-relative fieldicon\">\r\n                <TextInput\r\n                  className=\"form-control fieldicon-input-right\"\r\n                  name=\"email\"\r\n                  disabled={false}\r\n                  variant=\"standard\"\r\n                  type=\"email\"\r\n                  placeholder={t(\"text.userAuth.emailPlaceholder\")}\r\n                  setFieldValue={props.handleChange}\r\n                  icon={<em className=\"fieldicon-right splash-envelope\" />}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <div className=\"form-icon position-relative\">\r\n                <TextPassword\r\n                  className=\"form-control fieldicon-input-right\"\r\n                  name=\"password\"\r\n                  setFieldValue={props.handleChange}\r\n                  placeholder={t(\"text.userAuth.passwordPlaceholder\")}\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  icon={\r\n                    <Link\r\n                      to=\"#\"\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        setShowPassword(!showPassword);\r\n                      }}\r\n                      className=\"showPassword d-flex align-items-center justify-content-center\"\r\n                      data-target=\"password\"\r\n                    >\r\n                      {showPassword ? (\r\n                        <em className=\"toggle-password fieldicon-right splash-eye\" />\r\n                      ) : (\r\n                        <em className=\"toggle-password fieldicon-right splash-eye-off\" />\r\n                      )}\r\n                    </Link>\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"font-sm\">Birthday</label>\r\n              <div className=\"row g-2\">\r\n                <div className=\"col-4\">\r\n                  <Select\r\n                    className=\"form-select form-control\"\r\n                    setFieldValue={props.handleChange}\r\n                    name=\"month\"\r\n                    placeholder=\"Month\"\r\n                    arrayOfData={[...monthOptions]}\r\n                    callback={getMonthValue}\r\n                  />\r\n                </div>\r\n                <div className=\"col-4\">\r\n                  <Select\r\n                    className=\"form-select form-control\"\r\n                    setFieldValue={props.handleChange}\r\n                    name=\"day\"\r\n                    placeholder=\"Day\"\r\n                    arrayOfData={[...getDate]}\r\n                  />\r\n                </div>\r\n                <div className=\"col-4\">\r\n                  <Select\r\n                    className=\"form-select form-control\"\r\n                    setFieldValue={props.handleChange}\r\n                    name=\"year\"\r\n                    placeholder=\"Year\"\r\n                    arrayOfData={[...yearOptions]}\r\n                    callback={getYearValue}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              {/* <div className=\"form-check \"> */}\r\n              <CustomCheck\r\n                name=\"check\"\r\n                label=\"By signing up, I agree to Terms of Service\"\r\n                setFieldValue={props.handleChange}\r\n              />\r\n              {/* </div> */}\r\n            </div>\r\n\r\n            <CommonButton\r\n              htmlType=\"submit\"\r\n              type=\"submit\"\r\n              loading={false}\r\n              extraClassName=\"btn btn-warning ripple-effect w-100 loadMore\"\r\n            >\r\n              {t(\"text.userAuth.signUp\")}\r\n            </CommonButton>\r\n          </Form>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default SignUpForm;\r\n"],"names":["_ref","onSubmit","t","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_useState3","dayJsDateFormatter","Date","_useState4","monthValue","setMonthValue","_useState5","_useState6","yearValue","setYearValue","initialValues","fullName","email","password","month","undefined","day","year","check","monthOptions","useMemo","arr","_toConsumableArray","getMonths","forEach","item","obj","id","toLowerCase","name","push","yearOptions","getFullYear","i","getDate","dateData","getDateOfMonth","getMonthValue","value","getYearValue","_jsx","Formik","_objectSpread","enableReinitialize","children","props","_jsxs","Form","className","TextInput","disabled","variant","type","placeholder","setFieldValue","handleChange","icon","TextPassword","Link","to","onClick","e","preventDefault","Select","arrayOfData","callback","CustomCheck","label","CommonButton","htmlType","loading","extraClassName"],"sourceRoot":""}