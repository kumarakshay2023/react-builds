{"version":3,"file":"static/js/2765.b4641955.chunk.js","mappings":"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","sources":["pages/SubAdmin/ResetPassword/index.page.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport { Form, Formik } from \"formik\";\r\nimport {\r\n  CommonButton,\r\n  MetaTags,\r\n  Password as TextPassword,\r\n} from \"../../../components\";\r\n// import { baseRoutes } from \"../../../helpers/baseRoutes\";\r\nimport { logger, modalNotification } from \"../../../utils\";\r\nimport { subAdminAuthServices } from \"../../../services\";\r\n\r\nfunction ResetPassword() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n  const [checkRegex, setCheckRegex] = useState({\r\n    capital: false,\r\n    number: false,\r\n    length: false,\r\n  });\r\n\r\n  const param = useParams();\r\n  // const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const initialValues = {\r\n    newPassword: \"\",\r\n    confirmPassword: \"\",\r\n  };\r\n  const onPasswordChange = (e) => {\r\n    let data = e;\r\n    // setNewPassword(e.target.value);\r\n    let stateData = { ...checkRegex };\r\n    let upperCasePattern = /[A-Z]/g;\r\n    let specialCharacterPattern =\r\n      /^(?=.*[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{1,}$/;\r\n    let lengthPattern = /^.{6,15}$/g;\r\n    stateData.capital = upperCasePattern.test(data);\r\n    stateData.number = specialCharacterPattern.test(data);\r\n    stateData.length = lengthPattern.test(data);\r\n    setCheckRegex(stateData);\r\n  };\r\n\r\n  const onSubmit = async (value) => {\r\n    setLoading(true);\r\n    try {\r\n      let bodyData = {\r\n        token: param.token,\r\n        password: value.newPassword,\r\n        confirmPassword: value.confirmPassword,\r\n      };\r\n\r\n      const res = await subAdminAuthServices.resetPassword(bodyData);\r\n      const { success, message } = res;\r\n      if (success) {\r\n        setLoading(false);\r\n        modalNotification({\r\n          type: \"success\",\r\n          message,\r\n        });\r\n        navigate(\"/\");\r\n      }\r\n    } catch (error) {\r\n      logger(error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MetaTags title=\"Reset Password\" />\r\n      <div className=\"nk-block nk-block-middle nk-auth-body  wide-xs\">\r\n        <div className=\"card\">\r\n          <div className=\"card-inner card-inner-lg\">\r\n            <div className=\"nk-block nk-block-middle nk-auth-body\">\r\n              <div className=\"nk-block-head mb-3\">\r\n                <div className=\"nk-block-head-content\">\r\n                  <h5 className=\"nk-block-title\">Reset Password</h5>\r\n                </div>\r\n              </div>\r\n              <Formik\r\n                initialValues={{ ...initialValues }}\r\n                // validationSchema={validation()}\r\n                onSubmit={(e) => {\r\n                  onSubmit(e);\r\n                }}\r\n                validate={(e) => {\r\n                  onPasswordChange(e.newPassword);\r\n                }}\r\n                enableReinitialize\r\n              >\r\n                {(props) => {\r\n                  return (\r\n                    <Form onSubmit={props.handleSubmit}>\r\n                      <div className=\"form-group\">\r\n                        <div className=\"form-label-group\">\r\n                          <label className=\"form-label\" htmlFor=\"default-01\">\r\n                            New Password\r\n                          </label>\r\n                        </div>\r\n                        <div className=\"form-control-wrap\">\r\n                          <TextPassword\r\n                            className=\"form-control form-control-lg\"\r\n                            name=\"newPassword\"\r\n                            placeholder=\"Enter New Password\"\r\n                            setFieldValue={props.handleChange}\r\n                            type={showPassword ? \"text\" : \"password\"}\r\n                            toggleIcon={\r\n                              <Link\r\n                                to=\"#\"\r\n                                onClick={(e) => {\r\n                                  e.preventDefault();\r\n                                  setShowPassword(!showPassword);\r\n                                }}\r\n                                className=\"form-icon form-icon-right passcode-switch\"\r\n                                data-target=\"password\"\r\n                              >\r\n                                <em\r\n                                  className={`passcode-icon icon-show icon ni ni-eye${\r\n                                    showPassword ? \"\" : \"-off\"\r\n                                  } `}\r\n                                />\r\n                              </Link>\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group passwordInfo\">\r\n                        <h6>Password contains:</h6>\r\n                        <p\r\n                          className={`text-${\r\n                            checkRegex.capital ? \"success\" : \"danger\"\r\n                          }`}\r\n                        >\r\n                          <em className=\"icon ni ni-check\" /> &nbsp; At least 1\r\n                          Capital Letter & 1 Small Letter.\r\n                        </p>\r\n                        <p\r\n                          className={`text-${\r\n                            checkRegex.number ? \"success\" : \"danger\"\r\n                          }`}\r\n                        >\r\n                          <em className=\"icon ni ni-check\" /> &nbsp; At least 1\r\n                          Special Character & 1 Number.\r\n                        </p>\r\n                        <p\r\n                          className={`text-${\r\n                            checkRegex.length ? \"success\" : \"danger\"\r\n                          }`}\r\n                        >\r\n                          <em className=\"icon ni ni-check\" /> &nbsp; 6-15\r\n                          Character long.\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <div className=\"form-label-group\">\r\n                          <label\r\n                            className=\"form-label\"\r\n                            htmlFor=\"confirmPassword\"\r\n                          >\r\n                            Confirm Password\r\n                          </label>\r\n                        </div>\r\n                        <div className=\"form-control-wrap\">\r\n                          <TextPassword\r\n                            className=\"form-control form-control-lg\"\r\n                            name=\"confirmPassword\"\r\n                            placeholder=\"Confirm New Password\"\r\n                            setFieldValue={props.handleChange}\r\n                            type={showConfirmPassword ? \"text\" : \"password\"}\r\n                            toggleIcon={\r\n                              <Link\r\n                                to=\"#\"\r\n                                onClick={(e) => {\r\n                                  e.preventDefault();\r\n                                  setShowConfirmPassword(!showConfirmPassword);\r\n                                }}\r\n                                className=\"form-icon form-icon-right passcode-switch\"\r\n                                data-target=\"password\"\r\n                              >\r\n                                <em\r\n                                  className={`passcode-icon icon-show icon ni ni-eye${\r\n                                    showConfirmPassword ? \"\" : \"-off\"\r\n                                  } `}\r\n                                />\r\n                              </Link>\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <CommonButton\r\n                          type=\"submit\"\r\n                          htmlType=\"submit\"\r\n                          loading={loading}\r\n                          className=\"btn btn-lg btn-primary btn-block\"\r\n                        >\r\n                          Reset\r\n                        </CommonButton>\r\n                      </div>\r\n                    </Form>\r\n                  );\r\n                }}\r\n              </Formik>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ResetPassword;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","showPassword","setShowPassword","_useState5","_useState6","showConfirmPassword","setShowConfirmPassword","_useState7","capital","number","length","_useState8","checkRegex","setCheckRegex","param","useParams","navigate","useNavigate","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","value","bodyData","res","success","message","wrap","_context","prev","next","token","password","newPassword","confirmPassword","subAdminAuthServices","sent","modalNotification","type","t0","logger","stop","_x","apply","arguments","_jsxs","_Fragment","children","_jsx","MetaTags","title","className","Formik","initialValues","_objectSpread","e","validate","data","stateData","test","onPasswordChange","enableReinitialize","props","Form","handleSubmit","htmlFor","TextPassword","name","placeholder","setFieldValue","handleChange","toggleIcon","Link","to","onClick","preventDefault","concat","CommonButton","htmlType"],"sourceRoot":""}