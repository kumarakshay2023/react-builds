{"version":3,"file":"static/js/1749.a7e4fa7f.chunk.js","mappings":"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","sources":["pages/SubAdmin/Login/index.page.js","pages/SubAdmin/Login/validation.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  CommonButton,\r\n  Input as TextInput,\r\n  Password as TextPassword,\r\n} from \"../../../components\";\r\nimport {\r\n  logger,\r\n  modalNotification,\r\n  setLocalStorageToken,\r\n} from \"../../../utils\";\r\n// import { Input as TextInput, Password as TextPassword} from \"../../../index\";\r\nimport { subAdminAuthServices } from \"../../../services/SubAdmin\";\r\nimport { login } from \"../../../redux/AuthSlice/index.slice\";\r\nimport validation from \"./validation\";\r\n\r\nfunction Login() {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const initialValues = {\r\n    emailOrMobile: \"\",\r\n    password: \"\",\r\n  };\r\n  const onSubmit = async (value) => {\r\n    setLoading(true);\r\n    try {\r\n      const bodyData = { ...value };\r\n      delete bodyData.rememberMe;\r\n      const res = await subAdminAuthServices.userLogin(bodyData);\r\n      const { data, success, message } = res;\r\n      if (success) {\r\n        modalNotification({\r\n          type: \"success\",\r\n          message,\r\n        });\r\n        let resData = { ...data };\r\n        dispatch(login(resData));\r\n        navigate(\"/dashboard\");\r\n        setLocalStorageToken(res?.data?.token);\r\n      }\r\n    } catch (error) {\r\n      logger(error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"nk-block nk-block-middle nk-auth-body  wide-xs\">\r\n        <div className=\"card\">\r\n          <div className=\"card-inner card-inner-lg\">\r\n            <div className=\"nk-block-head\">\r\n              <div className=\"nk-block-head-content\">\r\n                <h4 className=\"nk-block-title\">Sign-In</h4>\r\n                <div className=\"nk-block-des\">\r\n                  <p>Access the Dellace panel using your email and password.</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Formik\r\n              initialValues={{ ...initialValues }}\r\n              validationSchema={validation()}\r\n              onSubmit={onSubmit}\r\n              enableReinitialize\r\n            >\r\n              {(props) => {\r\n                return (\r\n                  <Form>\r\n                    <div className=\"form-group\">\r\n                      <div className=\"form-label-group\">\r\n                        <label className=\"form-label\" htmlFor=\"email\">\r\n                          Email\r\n                        </label>\r\n                      </div>\r\n                      <div className=\"form-control-wrap\">\r\n                        <TextInput\r\n                          id=\"emailOrMobile\"\r\n                          className=\"form-control form-control-lg ps-5\"\r\n                          name=\"emailOrMobile\"\r\n                          disabled={false}\r\n                          floatingLabel={false}\r\n                          variant=\"standard\"\r\n                          type=\"email\"\r\n                          placeholder=\"Please Enter Email\"\r\n                          setFieldValue={props.handleChange}\r\n                          icon={\r\n                            <div className=\"form-icon form-icon-left\">\r\n                              <em className=\"icon ni ni-user\" />\r\n                            </div>\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <div className=\"form-label-group\">\r\n                        <label className=\"form-label\" htmlFor=\"email\">\r\n                          Password\r\n                        </label>\r\n                      </div>\r\n                      <div className=\"form-control-wrap\">\r\n                        <TextPassword\r\n                          className=\"form-control form-control-lg ps-5\"\r\n                          name=\"password\"\r\n                          floatingLabel={false}\r\n                          placeholder=\"Please Enter Password\"\r\n                          setFieldValue={props.handleChange}\r\n                          type={showPassword ? \"text\" : \"password\"}\r\n                          toggleIcon={\r\n                            <Link\r\n                              to=\"#\"\r\n                              onClick={(e) => {\r\n                                e.preventDefault();\r\n                                setShowPassword(!showPassword);\r\n                              }}\r\n                              className=\"form-icon form-icon-right passcode-switch\"\r\n                              data-target=\"password\"\r\n                            >\r\n                              <em\r\n                                className={`passcode-icon icon-show icon ni ni-eye${\r\n                                  showPassword ? \"\" : \"-off\"\r\n                                } `}\r\n                              />\r\n                            </Link>\r\n                          }\r\n                          icon={\r\n                            <div className=\"form-icon form-icon-left\">\r\n                              <em className=\"icon ni ni-lock\" />\r\n                            </div>\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <div className=\"custom-control custom-control-sm custom-checkbox\">\r\n                          {/* <CustomCheckbox\r\n                            className=\"custom-control-input\"\r\n                            id=\"checkbox\"\r\n                            name=\"rememberMe\"\r\n                            checked={props.values?.rememberMe}\r\n                          >\r\n                            <label\r\n                              className=\"custom-control-label\"\r\n                              htmlFor=\"checkbox\"\r\n                            >\r\n                              {t(\"text.adminLogin.rememberMe\")}\r\n                            </label>\r\n                          </CustomCheckbox> */}\r\n                        </div>\r\n                        <Link\r\n                          className=\"link link-primary link-sm\"\r\n                          to=\"/forgot-password\"\r\n                        >\r\n                          Forgot Password\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <CommonButton\r\n                        extraClassName=\"btn btn-lg btn-primary btn-block\"\r\n                        loading={loading}\r\n                        htmlType=\"submit\"\r\n                        type=\"submit\"\r\n                      >\r\n                        Login\r\n                      </CommonButton>\r\n                    </div>\r\n                  </Form>\r\n                );\r\n              }}\r\n            </Formik>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import * as yup from \"yup\";\r\n\r\nexport default function validation() {\r\n  return yup.object().shape({\r\n    password: yup.string().required(\"Please enter a Password\"),\r\n    emailOrMobile: yup\r\n      .string()\r\n      .required(\"Please enter a email\")\r\n      .email(\"Please enter a valid email address\")\r\n      .matches(\r\n        /^(?:\\d{6,15}|[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4})$/,\r\n        \"Please enter a valid email address\"\r\n      ),\r\n\r\n    // monthly_price: yup.string().required(\"monthly price is required \"),\r\n    // per_min_price: yup.string().required(\"Per min price is required\"),\r\n  });\r\n}\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_useState3","_useState4","loading","setLoading","dispatch","useDispatch","navigate","useNavigate","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","value","bodyData","res","data","success","message","_res$data","resData","wrap","_context","prev","next","_objectSpread","rememberMe","subAdminAuthServices","sent","modalNotification","type","login","setLocalStorageToken","token","t0","logger","stop","_x","apply","arguments","_jsx","_Fragment","children","className","_jsxs","Formik","initialValues","emailOrMobile","password","validationSchema","yup","shape","required","email","matches","enableReinitialize","props","Form","htmlFor","TextInput","id","name","disabled","floatingLabel","variant","placeholder","setFieldValue","handleChange","icon","TextPassword","toggleIcon","Link","to","onClick","e","preventDefault","concat","CommonButton","extraClassName","htmlType"],"sourceRoot":""}