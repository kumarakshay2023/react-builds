{"version":3,"file":"static/js/6710.c703835e.chunk.js","mappings":"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","sources":["pages/SubAdmin/ForgotPassword/index.page.js","pages/SubAdmin/ForgotPassword/validation.js"],"sourcesContent":["/* eslint-disable react/no-unescaped-entities */\r\nimport { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Formik, Form } from \"formik\";\r\nimport {\r\n  Input as TextInput,\r\n  CommonButton,\r\n  MetaTags,\r\n} from \"../../../components\";\r\nimport { logger, modalNotification } from \"../../../utils\";\r\nimport { subAdminAuthServices } from \"../../../services\";\r\nimport validation from \"./validation\";\r\n\r\nfunction ForgotPassword() {\r\n  // const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n  const initialValues = {\r\n    email: \"\",\r\n  };\r\n\r\n  const onSubmit = async (values) => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await subAdminAuthServices.forgetPasswordService(values);\r\n      const { success, message } = res;\r\n      if (success) {\r\n        modalNotification({\r\n          type: \"success\",\r\n          message,\r\n        });\r\n        navigate(\"/\");\r\n      }\r\n    } catch (error) {\r\n      logger(error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  return (\r\n    <>\r\n      <MetaTags title=\"Forgot Password\" />\r\n      <div className=\"nk-block nk-block-middle nk-auth-body  wide-xs\">\r\n        <div className=\"card\">\r\n          <div className=\"card-inner card-inner-lg\">\r\n            <div className=\"nk-block nk-block-middle nk-auth-body\">\r\n              <div className=\"nk-block-head mb-3\">\r\n                <div className=\"nk-block-head-content\">\r\n                  <div className=\"mb-4\">\r\n                    <Link to=\"/\" className=\"nk-block-back\">\r\n                      <em className=\"icon ni ni-arrow-left\" />\r\n                    </Link>\r\n                  </div>\r\n                  <h5 className=\"nk-block-title\">Forgot Password?</h5>\r\n                  <div className=\"nk-block-des\">\r\n                    <p>\r\n                      Don't Worry! We will send you password reset link to your\r\n                      email address.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <Formik\r\n                initialValues={{ ...initialValues }}\r\n                validationSchema={validation()}\r\n                onSubmit={onSubmit}\r\n                enableReinitialize\r\n              >\r\n                {(props) => {\r\n                  return (\r\n                    <Form onSubmit={props.handleSubmit}>\r\n                      <div className=\"form-group\">\r\n                        <div className=\"form-label-group\">\r\n                          <label className=\"form-label\" htmlFor=\"default-01\">\r\n                            Email Address\r\n                          </label>\r\n                        </div>\r\n                        <div className=\"form-control-wrap\">\r\n                          <div className=\"form-icon form-icon-left\">\r\n                            <em className=\"icon ni ni-user\" />\r\n                          </div>\r\n                          <TextInput\r\n                            className=\"form-control form-control-lg\"\r\n                            name=\"email\"\r\n                            disabled={false}\r\n                            variant=\"standard\"\r\n                            type=\"email\"\r\n                            placeholder=\"Enter Email Address\"\r\n                            setFieldValue={props.handleChange}\r\n                            icon={\r\n                              <div className=\"form-icon form-icon-left\">\r\n                                <em className=\"icon ni ni-user\" />\r\n                              </div>\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-control-wrap mt-5\">\r\n                        <CommonButton\r\n                          type=\"submit\"\r\n                          htmlType=\"submit\"\r\n                          loading={loading}\r\n                          className=\"btn btn-lg btn-primary btn-block\"\r\n                        >\r\n                          Send\r\n                        </CommonButton>\r\n                      </div>\r\n                    </Form>\r\n                  );\r\n                }}\r\n              </Formik>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword;\r\n","import * as yup from \"yup\";\r\n\r\nexport default function validation() {\r\n  return yup.object().shape({\r\n    email: yup\r\n      .string()\r\n      .required(\"Please enter a email\")\r\n      .email(\"Please enter a valid email address\")\r\n      .matches(\r\n        /^(?:\\d{6,15}|[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4})$/,\r\n        \"Please enter a valid email address\"\r\n      ),\r\n  });\r\n}\r\n"],"names":["navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","loading","setLoading","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","res","success","message","wrap","_context","prev","next","subAdminAuthServices","sent","modalNotification","type","t0","logger","stop","_x","apply","arguments","_jsxs","_Fragment","children","_jsx","MetaTags","title","className","Link","to","Formik","initialValues","_objectSpread","email","validationSchema","yup","shape","required","matches","enableReinitialize","props","Form","handleSubmit","htmlFor","TextInput","name","disabled","variant","placeholder","setFieldValue","handleChange","icon","CommonButton","htmlType"],"sourceRoot":""}